  main.cpp
main.cpp(213): warning C4005: 'INFINITY': macro redefinition
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.10240.0\ucrt\math.h(78): note: see previous definition of 'INFINITY'
main.cpp(292): warning C4305: 'initializing': truncation from 'double' to 'float'
main.cpp(305): warning C4305: 'argument': truncation from 'double' to 'const float'
main.cpp(319): warning C4305: 'initializing': truncation from 'double' to 'float'
main.cpp(369): warning C4244: 'initializing': conversion from 'float' to 'unsigned int', possible loss of data
main.cpp(371): warning C4018: '<': signed/unsigned mismatch
main.cpp(373): warning C4244: 'initializing': conversion from 'double' to 'float', possible loss of data
main.cpp(374): warning C4244: 'initializing': conversion from 'double' to 'float', possible loss of data
main.cpp(404): warning C4244: 'initializing': conversion from 'double' to 'float', possible loss of data
main.cpp(431): warning C4244: 'initializing': conversion from 'double' to 'float', possible loss of data
main.cpp(432): warning C4244: 'initializing': conversion from 'double' to 'float', possible loss of data
main.cpp(529): warning C4244: 'argument': conversion from 'int' to 'float', possible loss of data
main.cpp(532): warning C4305: 'argument': truncation from 'double' to 'float'
main.cpp(548): warning C4244: '=': conversion from 'float' to 'int', possible loss of data
main.cpp(556): warning C4244: 'initializing': conversion from 'int' to 'float', possible loss of data
main.cpp(559): warning C4305: 'argument': truncation from 'double' to 'float'
main.cpp(571): warning C4305: 'argument': truncation from 'double' to 'float'
main.cpp(571): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
main.cpp(575): warning C4305: 'argument': truncation from 'double' to 'float'
main.cpp(575): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
main.cpp(576): warning C4305: 'argument': truncation from 'double' to 'float'
main.cpp(579): warning C4305: 'argument': truncation from 'double' to 'float'
main.cpp(580): warning C4305: 'argument': truncation from 'double' to 'float'
main.cpp(588): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
main.cpp(588): warning C4305: 'argument': truncation from 'double' to 'float'
main.cpp(589): warning C4305: 'argument': truncation from 'double' to 'float'
main.cpp(592): warning C4305: 'argument': truncation from 'double' to 'float'
main.cpp(592): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
main.cpp(593): warning C4305: 'argument': truncation from 'double' to 'float'
main.cpp(596): warning C4305: 'argument': truncation from 'double' to 'float'
main.cpp(596): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
main.cpp(597): warning C4305: 'argument': truncation from 'double' to 'float'
main.cpp(600): warning C4305: 'argument': truncation from 'double' to 'float'
main.cpp(600): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
main.cpp(601): warning C4305: 'argument': truncation from 'double' to 'float'
main.cpp(604): warning C4305: 'argument': truncation from 'double' to 'float'
main.cpp(604): warning C4244: 'argument': conversion from 'double' to 'float', possible loss of data
main.cpp(605): warning C4305: 'argument': truncation from 'double' to 'float'
main.cpp(609): warning C4244: 'argument': conversion from 'float' to 'int', possible loss of data
main.cpp(613): warning C4244: 'argument': conversion from 'float' to 'int', possible loss of data
main.cpp(627): warning C4244: '=': conversion from 'float' to 'int', possible loss of data
main.cpp(634): warning C4244: 'initializing': conversion from 'int' to 'float', possible loss of data
main.cpp(646): warning C4244: 'argument': conversion from 'float' to 'int', possible loss of data
main.cpp(650): warning C4244: 'argument': conversion from 'float' to 'int', possible loss of data
main.cpp(662): warning C4244: 'initializing': conversion from 'float' to 'int', possible loss of data
main.cpp(790): warning C4244: '=': conversion from 'int' to 'float', possible loss of data
E:\Programs\Microsoft Visual Studio 14.0\VC\include\type_traits(1376): warning C4244: 'argument': conversion from 'unsigned int' to 'float', possible loss of data
  E:\Programs\Microsoft Visual Studio 14.0\VC\include\type_traits(1444): note: see reference to function template instantiation 'void std::_Invoker_functor::_Call<void(__cdecl *)(Vec3f *,const std::vector<Object,std::allocator<_Ty>> &,int,float,float,float,float,float,float),Vec3<float>*,std::vector<_Ty,std::allocator<_Ty>>,unsigned int,unsigned int,unsigned int,float,float,float,float>(_Callable &&,Vec3<float> *&&,std::vector<_Ty,std::allocator<_Ty>> &&,unsigned int &&,unsigned int &&,unsigned int &&,float &&,float &&,float &&,float &&)' being compiled
          with
          [
              _Ty=Object,
              _Callable=void (__cdecl *)(Vec3f *,const std::vector<Object,std::allocator<Object>> &,int,float,float,float,float,float,float)
          ]
  E:\Programs\Microsoft Visual Studio 14.0\VC\include\thr/xthread(240): note: see reference to function template instantiation 'void std::invoke<void(__cdecl *)(Vec3f *,const std::vector<Object,std::allocator<_Ty>> &,int,float,float,float,float,float,float),Vec3<float>*,std::vector<_Ty,std::allocator<_Ty>>,unsigned int,unsigned int,unsigned int,float,float,float,float>(_Callable &&,Vec3<float> *&&,std::vector<_Ty,std::allocator<_Ty>> &&,unsigned int &&,unsigned int &&,unsigned int &&,float &&,float &&,float &&,float &&)' being compiled
          with
          [
              _Ty=Object,
              _Callable=void (__cdecl *)(Vec3f *,const std::vector<Object,std::allocator<Object>> &,int,float,float,float,float,float,float)
          ]
  E:\Programs\Microsoft Visual Studio 14.0\VC\include\thr/xthread(249): note: see reference to function template instantiation 'void std::_LaunchPad<_Target>::_Execute<0,1,2,3,4,5,6,7,8,9>(std::tuple<void (__cdecl *)(Vec3f *,const std::vector<Object,std::allocator<_Ty>> &,int,float,float,float,float,float,float),Vec3f *,std::vector<_Ty,std::allocator<_Ty>>,unsigned int,unsigned int,unsigned int,float,float,float,float> &,std::integer_sequence<unsigned __int64,0,1,2,3,4,5,6,7,8,9>)' being compiled
          with
          [
              _Target=std::unique_ptr<std::tuple<void (__cdecl *)(Vec3f *,const std::vector<Object,std::allocator<Object>> &,int,float,float,float,float,float,float),Vec3f *,std::vector<Object,std::allocator<Object>>,unsigned int,unsigned int,unsigned int,float,float,float,float>,std::default_delete<std::tuple<void (__cdecl *)(Vec3f *,const std::vector<Object,std::allocator<Object>> &,int,float,float,float,float,float,float),Vec3f *,std::vector<Object,std::allocator<Object>>,unsigned int,unsigned int,unsigned int,float,float,float,float>>>,
              _Ty=Object
          ]
  E:\Programs\Microsoft Visual Studio 14.0\VC\include\thr/xthread(247): note: see reference to function template instantiation 'void std::_LaunchPad<_Target>::_Execute<0,1,2,3,4,5,6,7,8,9>(std::tuple<void (__cdecl *)(Vec3f *,const std::vector<Object,std::allocator<_Ty>> &,int,float,float,float,float,float,float),Vec3f *,std::vector<_Ty,std::allocator<_Ty>>,unsigned int,unsigned int,unsigned int,float,float,float,float> &,std::integer_sequence<unsigned __int64,0,1,2,3,4,5,6,7,8,9>)' being compiled
          with
          [
              _Target=std::unique_ptr<std::tuple<void (__cdecl *)(Vec3f *,const std::vector<Object,std::allocator<Object>> &,int,float,float,float,float,float,float),Vec3f *,std::vector<Object,std::allocator<Object>>,unsigned int,unsigned int,unsigned int,float,float,float,float>,std::default_delete<std::tuple<void (__cdecl *)(Vec3f *,const std::vector<Object,std::allocator<Object>> &,int,float,float,float,float,float,float),Vec3f *,std::vector<Object,std::allocator<Object>>,unsigned int,unsigned int,unsigned int,float,float,float,float>>>,
              _Ty=Object
          ]
  E:\Programs\Microsoft Visual Studio 14.0\VC\include\thr/xthread(244): note: while compiling class template member function 'void std::_LaunchPad<_Target>::_Run(std::_LaunchPad<_Target> *) noexcept'
          with
          [
              _Target=std::unique_ptr<std::tuple<void (__cdecl *)(Vec3f *,const std::vector<Object,std::allocator<Object>> &,int,float,float,float,float,float,float),Vec3f *,std::vector<Object,std::allocator<Object>>,unsigned int,unsigned int,unsigned int,float,float,float,float>,std::default_delete<std::tuple<void (__cdecl *)(Vec3f *,const std::vector<Object,std::allocator<Object>> &,int,float,float,float,float,float,float),Vec3f *,std::vector<Object,std::allocator<Object>>,unsigned int,unsigned int,unsigned int,float,float,float,float>>>
          ]
  E:\Programs\Microsoft Visual Studio 14.0\VC\include\thr/xthread(232): note: see reference to function template instantiation 'void std::_LaunchPad<_Target>::_Run(std::_LaunchPad<_Target> *) noexcept' being compiled
          with
          [
              _Target=std::unique_ptr<std::tuple<void (__cdecl *)(Vec3f *,const std::vector<Object,std::allocator<Object>> &,int,float,float,float,float,float,float),Vec3f *,std::vector<Object,std::allocator<Object>>,unsigned int,unsigned int,unsigned int,float,float,float,float>,std::default_delete<std::tuple<void (__cdecl *)(Vec3f *,const std::vector<Object,std::allocator<Object>> &,int,float,float,float,float,float,float),Vec3f *,std::vector<Object,std::allocator<Object>>,unsigned int,unsigned int,unsigned int,float,float,float,float>>>
          ]
  E:\Programs\Microsoft Visual Studio 14.0\VC\include\thr/xthread(259): note: see reference to class template instantiation 'std::_LaunchPad<_Target>' being compiled
          with
          [
              _Target=std::unique_ptr<std::tuple<void (__cdecl *)(Vec3f *,const std::vector<Object,std::allocator<Object>> &,int,float,float,float,float,float,float),Vec3f *,std::vector<Object,std::allocator<Object>>,unsigned int,unsigned int,unsigned int,float,float,float,float>,std::default_delete<std::tuple<void (__cdecl *)(Vec3f *,const std::vector<Object,std::allocator<Object>> &,int,float,float,float,float,float,float),Vec3f *,std::vector<Object,std::allocator<Object>>,unsigned int,unsigned int,unsigned int,float,float,float,float>>>
          ]
  E:\Programs\Microsoft Visual Studio 14.0\VC\include\thread(50): note: see reference to function template instantiation 'void std::_Launch<std::unique_ptr<std::tuple<void (__cdecl *)(Vec3f *,const std::vector<Object,std::allocator<_Ty>> &,int,float,float,float,float,float,float),Vec3f *,std::vector<_Ty,std::allocator<_Ty>>,unsigned int,unsigned int,unsigned int,float,float,float,float>,std::default_delete<std::tuple<void (__cdecl *)(Vec3f *,const std::vector<_Ty,std::allocator<_Ty>> &,int,float,float,float,float,float,float),Vec3f *,std::vector<_Ty,std::allocator<_Ty>>,unsigned int,unsigned int,unsigned int,float,float,float,float>>>>(_Thrd_t *,_Target &&)' being compiled
          with
          [
              _Ty=Object,
              _Target=std::unique_ptr<std::tuple<void (__cdecl *)(Vec3f *,const std::vector<Object,std::allocator<Object>> &,int,float,float,float,float,float,float),Vec3f *,std::vector<Object,std::allocator<Object>>,unsigned int,unsigned int,unsigned int,float,float,float,float>,std::default_delete<std::tuple<void (__cdecl *)(Vec3f *,const std::vector<Object,std::allocator<Object>> &,int,float,float,float,float,float,float),Vec3f *,std::vector<Object,std::allocator<Object>>,unsigned int,unsigned int,unsigned int,float,float,float,float>>>
          ]
  main.cpp(415): note: see reference to function template instantiation 'std::thread::thread<void(__cdecl &)(Vec3f *,const std::vector<Object,std::allocator<_Ty>> &,int,float,float,float,float,float,float),Vec3f*&,const std::vector<_Ty,std::allocator<_Ty>>&,unsigned int&,unsigned int&,unsigned int,float&,float&,float&,float&,void>(_Fn,Vec3f *&,const std::vector<_Ty,std::allocator<_Ty>> &,unsigned int &,unsigned int &,unsigned int &&,float &,float &,float &,float &)' being compiled
          with
          [
              _Ty=Object,
              _Fn=void (__cdecl &)(Vec3f *,const std::vector<Object,std::allocator<Object>> &,int,float,float,float,float,float,float)
          ]
  E:\Programs\Microsoft Visual Studio 14.0\VC\include\chrono(208): note: see reference to class template instantiation 'std::chrono::duration_values<_Rep>' being compiled
          with
          [
              _Rep=std::chrono::system_clock::rep
          ]
  E:\Programs\Microsoft Visual Studio 14.0\VC\include\chrono(207): note: while compiling class template member function 'std::chrono::duration<std::chrono::system_clock::rep,std::chrono::system_clock::period> std::chrono::duration<std::chrono::system_clock::rep,std::chrono::system_clock::period>::zero(void)'
  E:\Programs\Microsoft Visual Studio 14.0\VC\include\chrono(237): note: see reference to function template instantiation 'std::chrono::duration<std::chrono::system_clock::rep,std::chrono::system_clock::period> std::chrono::duration<std::chrono::system_clock::rep,std::chrono::system_clock::period>::zero(void)' being compiled
  E:\Programs\Microsoft Visual Studio 14.0\VC\include\chrono(231): note: see reference to class template instantiation 'std::chrono::duration<std::chrono::system_clock::rep,std::chrono::system_clock::period>' being compiled
  E:\Programs\Microsoft Visual Studio 14.0\VC\include\chrono(973): note: see reference to class template instantiation 'std::chrono::time_point<std::chrono::system_clock,std::chrono::system_clock::duration>' being compiled
  Generating code
  868 of 871 functions (99.7%) were compiled, the rest were copied from previous compilation.
    3 functions were new in current compilation
    0 functions had inline decision re-evaluated but remain unchanged
  Finished generating code
  RayTracerSmall.vcxproj -> C:\Users\alexo\Documents\Dropbox\University Year 3\LOW LEVEL GAME PROGRAMMING\RayTracerFramework\x64\Release\RayTracerSmall.exe
  RayTracerSmall.vcxproj -> C:\Users\alexo\Documents\Dropbox\University Year 3\LOW LEVEL GAME PROGRAMMING\RayTracerFramework\x64\Release\RayTracerSmall.pdb (Full PDB)
